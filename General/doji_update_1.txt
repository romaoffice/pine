//@version=5
indicator("doji",overlay = true)

//doji
threshold = input.float(0.005, minval=0.0001, title='Threshold', group='Doji')
doji_bar = math.abs(open - close) <= (high - low) * threshold

//bband
bbLength = input.int(defval=20, title="BB period",group='BBand')
bbMulti = input.float(defval=1.5, title="BB multiple",group='BBand')

[middle, upper, lower] = ta.bb(close, bbLength, bbMulti)
color_bb_basic = input.color(#FF6D00,title='Basic', group='BBand')
color_bb_up = input.color(#2962FF,title='Upper/Lower', group='BBand')
color_fill = input.color(color.rgb(33, 150, 243, 95),title='Fill', group='BBand')
plot(middle, "Basis", color_bb_basic)
p1 = plot(upper, "Upper", color=color_bb_up)
p2 = plot(lower, "Lower", color=color_bb_up)
fill(p1, p2, title = "Background", color=color_fill)

bb_out_upper = close>upper
bb_out_lower = close<lower

//sto
periodK = input.int(14, title="%K Length", minval=1,group='STO')
smoothK = input.int(1, title="%K Smoothing", minval=1,group='STO')
periodD = input.int(3, title="%D Smoothing", minval=1,group='STO')
k = ta.sma(ta.stoch(close, high, low, periodK), smoothK)
d = ta.sma(k, periodD)

oversold_level = input.int(defval=20, title="Oversold level",group='STO')
overbought_level = input.int(defval=80, title="Overbought level",group='STO')

oversold = k<oversold_level
overbought  = k>overbought_level

//indecision
color_indecision_long = input.color(color.new(#2ee412, 11),title='Long bar', group='Indecision')
color_indecision_short = input.color(color.new(#bd12e4, 19),title='Short bar', group='Indecision')

indecision_long = doji_bar and (bb_out_lower) and oversold
indecision_short = doji_bar and (bb_out_upper) and overbought
barcolor(indecision_long? color_indecision_long : na)
barcolor(indecision_short? color_indecision_short : na)

// wait break
color_indecision_break = input.color(color.new(#2ee412, 11),title='Breakline', group='Trading')
color_indecision_stoploss = input.color(color.new(#e42712, 11),title='Stoploss', group='Trading')
direction = indecision_long[1] ? 1:(indecision_short[1]?-1:0)
var break_level = float(0)
var stoploss_level = float(0)
var broke = bool(true)
if (direction==0)
	direction:=nz(direction[1])
else
	broke:= false
	if(direction==1)
		break_level:= high[1]
		stoploss_level:=low[1]
	else
		break_level:= low[1]
		stoploss_level:=high[1]

if(break_level>0 and broke==false)
	if(direction==1)
		if(close>break_level)
			broke:=true
	else
		if(close<break_level)
			broke:=true
if(direction!=0)
	if(direction==1)
		if(close<stoploss_level)
			stoploss_level:=0
	else
		if(close>stoploss_level)
			stoploss_level:=0
if(indecision_long or indecision_short) 
	broke:=false
plot((direction!=0 and (broke[1]==false or broke[2]==false or broke[3]==false or broke[4]==false))?break_level:na,color=color_indecision_break,style=plot.style_linebr,title='level',linewidth=2)
plot((direction!=0 and broke and (stoploss_level>0 or stoploss_level[1]>0))?(stoploss_level>0?stoploss_level:stoploss_level[1]):na,color=color_indecision_stoploss,style=plot.style_cross,title='stoploss',linewidth=2)
plotshape(direction==1 and (broke and broke[1]==false),title="long",style=shape.triangleup,color=color.blue,location=location.belowbar,size = size.small)
plotshape(direction==-1 and (broke and broke[1]==false),title="short",style=shape.triangledown,color=color.red,location=location.abovebar,size = size.small)